const requestString = {
    toMain: '–ù–∞ –≥–æ–ª–æ–≤–Ω—É üåê',
    materials: '–ú–∞—Ç–µ—Ä—ñ–∞–ª–∏ üßæ',
    newsSearch: '–ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤–∏–Ω üîç',
    anotherRequest: '–Ü–Ω—à–∏–π –∑–∞–ø–∏—Ç üó≥',
    arrowNext: '‚ñ∂',
    arrowPrevious: '‚óÄ',
};

exports.BotAnswer = {
    whatDoYouWant: '–©–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å? üßê',
    enterRequest: '–í–≤–µ–¥—ñ—Ç—å –∑–∞–ø–∏—Ç üìù',
    invalidDataNews: '–°—Ç–∞—Ç—Ç—è –º—ñ—Å—Ç–∏—Ç—å –Ω–µ–≤–∞–ª—ñ–¥–Ω—ñ –¥–∞–Ω—ñ. ‚ùå',
    anythingElse: '–©–æ—Å—å —â–µ? üßê',
    noNews: '–ü–æ —Ü—å–æ–º—É –∑–∞–ø–∏—Ç—É –Ω–µ–º–∞—î –Ω–æ–≤–∏–Ω ‚ùå',
    isItSticker: '–ê —Å–ª–æ–≤–∞–º–∏? üßê',
};

exports.Button = {
    toMain: requestString.toMain,
    materials: requestString.materials,
    newsSearch: requestString.newsSearch,
    anotherRequest: requestString.anotherRequest,
    arrowNext: requestString.arrowNext,
    arrowPrevious: requestString.arrowPrevious,
};

exports.RegEx = {
    start: new RegExp('/start'),
    toMain: new RegExp(requestString.toMain),
    materials: new RegExp(requestString.materials),
    newsSearch: new RegExp(requestString.newsSearch),
    anotherRequest: new RegExp(requestString.anotherRequest),
};

exports.SimpleString = {
    page: 'üìÑ',
    article: '–°—Ç–∞—Ç—Ç—è',
    resource: '–†–µ—Å—É—Ä—Å',
    link: '–ü–æ—Å–∏–ª–∞–Ω–Ω—è',
    fetchingArticles: '–ó–∞–≤–∞–Ω—Ç–∞–∂—É—é –º–∞—Ç–µ—Ä—ñ–∞–ª–∏',
    pageWord: '–°—Ç–æ—Ä—ñ–Ω–∫–∞',
    beginning: '‚Ü©',
    shuffle: 'üîÄ',
    divisor: '‚ûñ',
}